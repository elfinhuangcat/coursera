.libPaths("C:\\Yaxin\\RLib")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
str(mpg)
?aplot
?qplot
aplot(displ.hwy,data=mpg)
qplot(displ.hwy,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv) #Auto legend placement when specified subsetting by drv
?png
getwd()
png("qplot.png",bg="transparent")
qplot(displ,hwy,data=mpg,color=drv) #Auto legend placement when specified subsetting by drv
dev.close()
dev.off()
aplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
png("qplot.png",bg="transparent")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
dev.off()
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
g <- ggplot(mpg,aes(displ,hwy))
print(g)
p <- g+geom_point()
p
p <- g+geom_kube()
p <- g+geom_line()
p
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + facet_grid(.~drv)+geom_smooth(method="lm")
g + geom_point(color = "steelblue", size=4, alpha=1/2)
g + geom_point(aes(color=drv),size=4,alpha=1/2)
g + geom_point(aes(color=drv),size=2,alpha=1)
g + geom_point(aes(color=drv),size=4,alpha=1/2)
g + geom_point(aes(color=drv),size=2,alpha=1/2)
g + geom_point(aes(color=drv),size=2,alpha=1)
g + geom_point(aes(color=drv),size=2,alpha=1/2)
g + geom_point(aes(color=drv)) + labs(title="MAACS Cohort",x=expression("log "*PM[2.5]),y="Nocturnal Symptoms")
?theme_bw
x <- 1:100
y <- rnorm(100)
testdat <- data.frame(x,y)
testdat
x <- 1:100
y <- rnorm(100)
testdat <- data.frame(x,y)
testdat[50,2] <- 100 ## Outlier!
plot(testdat$x,testdat$y,type="l",ylim = c(-3,3))
g <- ggplot(testdat, aes(x=x,y=y))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,BodyWeight)
?llines()
?axis()
?points()
xyplot(weight~Time|Diet,BodyWeight)
text("asdf")
?text
xyplot(weight~Time|Diet,BodyWeight)
llines("asdf")
axis("asdf")
axis(x="asdf")
?axis
xyplot(weight~Time|Diet,BodyWeight)
axis(1)
axis(4)
axis(3)
?points
xyplot(weight~Time|Diet,BodyWeight)
points(c(1,2,3,4),c(5,6,7,8))
?panel
??panel
?lattice
lattice.getOption("panel.xyplot")
lattice.getOption()
?trellis.par.set
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
.libPaths("C:\\Yaxin\\RLib")
?grDevices
colors()
pal <- colorRamp(c("red","blue"))
pal(0)
pal(0.5)
pal(1)
pal <- colorRampPalette(c("red","yellow"))
pal(2)
pal(10)
?brewer.pal
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3,"BuGn")
?brewer.pal
# To look up the names of the palettes.
cols
pal <- colorRampPalette(cols)
image(volcano, col=pal(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
smoothScatter(x,y)
?rgb
plot(x,y,pch=19)
plot(x,y,col = rgb(0,0,0,0.2),pch=19)
plot(x,y,col = rgb(255,0,0,0.2),pch=19)
plot(x,y,col = rgb(255,1,0,0.2),pch=19)
plot(x,y,col = rgb(1,1,0,0.2),pch=19)
plot(x,y,col = rgb(0.5,0,0,0.2),pch=19)
plot(x,y,col = rgb(0.1,0,0,0.2),pch=19)
plot(x,y,col = rgb(1,0,0,0.2),pch=19)
setwd("C:\\Yaxin\\MMContribution\\RunAlgorithmsInR\\LinearRegression")
cat("\014")
setwd("C:\\Yaxin\\datasciencecoursera\\MyNotes")
x<-list(c(1,2,3,4),c(3,4,5),c(6,7,8))
str(tapply)
?tapply
data(UCBAdmissions)
class(UCBAdmissions)
head(UCBAdmissions)
UCBAdmissions
DF <- as.data.frame(UCBAdmissions) # load the built-in dataset
head(DF)
data(warpbreaks)
head(warpbreaks)
warpbreaks$replicate <- rep(1:9, len = 54)
head(warpbreaks)
xt = xtabs(breaks ~., data=warpbreaks) # Break down by all variables
head(xt)
xt
ftable(xt)
library(reshape2)
data(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
# carname,gear,cyl together to be the id of each row, and the variables mpg,hp will be count
print(head(carMelt))
?melt
cylData <- dcast(carMelt, carname + gear ~ variable) # summarize the data by “carname” and “gear”
head(cylData)
tapply(InsectSprays$count,InsectSprays$spray,sum)
head(InsectSprays)
?sub
data(cameraData)
library(datasets)
data(cameraData)
data(UCBAdmissions) #It is a table
DF <- as.data.frame(UCBAdmissions) # load the built-in dataset
print(table(xtabs(Freq~Gender + Admit, data=DF)))
table(xtabs(Freq~Gender + Admit, data=DF))
print((xtabs(Freq~Gender + Admit, data=DF))
)
s1 <- c("Bush has historically won all major debates he's done.","in my view, Bus doen'st need these debates..", "bush does not need the debates?", "That's what Bush suporters are doing about the fierce great debate.")
s1
print(grep("[Bb]ush( +[^ ]+ +){1,5} debate",s1))
?date
?format
date()
print(date())
m <- matrix(rnorm(25),5,5)
dist(m)
hClustering <- hclust(dist(m))
plot(hClustering)
